<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.FeedbackMapper">

    <resultMap type="Feedback" id="FeedbackResult">
        <result property="id"    column="id"    />
        <result property="orderId"    column="orderId"    />
        <result property="userPhone"    column="userPhone"    />
        <result property="content"    column="content"    />
        <result property="feedbackTime"    column="feedbackTime"    />
        <result property="status"    column="status"    />
        <result property="handleResult"    column="handleResult"    />
        <result property="finishTime"    column="finishTime"    />
        <result property="driverId"    column="driverId"    />
        <result property="userId"    column="userId"    />
        <result property="riderId"    column="riderId"    />
        <result property="handleStaff"    column="handleStaff"    />
    </resultMap>

    <resultMap id="FeedbackCEndUserResult" type="Feedback" extends="FeedbackResult">
        <collection property="cEndUserList" notNullColumn="sub_id" javaType="java.util.List" resultMap="CEndUserResult" />
    </resultMap>

    <resultMap type="CEndUser" id="CEndUserResult">
        <result property="id"    column="sub_id"    />
        <result property="phone"    column="sub_phone"    />
        <result property="password"    column="sub_password"    />
        <result property="lastLoginTime"    column="sub_lastLoginTime"    />
        <result property="passwordUpdateTime"    column="sub_passwordUpdateTime"    />
        <result property="accountCreateTime"    column="sub_accountCreateTime"    />
        <result property="type"    column="sub_type"    />
        <result property="profileId"    column="sub_profileId"    />
    </resultMap>

    <sql id="selectFeedbackVo">
        select id, orderId, userPhone, content, feedbackTime, status, handleResult, finishTime, driverId, userId, riderId, handleStaff from feedback
    </sql>

    <select id="selectFeedbackList" parameterType="Feedback" resultMap="FeedbackResult">
        <include refid="selectFeedbackVo"/>
        <where>
            <if test="id != null "> and id = #{id}</if>
            <if test="orderId != null  and orderId != ''"> and orderId = #{orderId}</if>
            <if test="userPhone != null  and userPhone != ''"> and userPhone like concat('%', #{userPhone}, '%')</if>
            <if test="content != null  and content != ''"> and content like concat('%', #{content}, '%')</if>
            <if test="params.beginFeedbackTime != null and params.beginFeedbackTime != '' and params.endFeedbackTime != null and params.endFeedbackTime != ''"> and feedbackTime between #{params.beginFeedbackTime} and #{params.endFeedbackTime}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="handleResult != null  and handleResult != ''"> and handleResult like concat('%', #{handleResult}, '%')</if>
            <if test="params.beginFinishTime != null and params.beginFinishTime != '' and params.endFinishTime != null and params.endFinishTime != ''"> and finishTime between #{params.beginFinishTime} and #{params.endFinishTime}</if>
            <if test="driverId != null  and driverId != ''"> and driverId = #{driverId}</if>
            <if test="userId != null  and userId != ''"> and userId = #{userId}</if>
            <if test="riderId != null  and riderId != ''"> and riderId = #{riderId}</if>
            <if test="handleStaff != null  and handleStaff != ''"> and handleStaff = #{handleStaff}</if>
        </where>
    </select>

    <select id="selectFeedbackById" parameterType="Long" resultMap="FeedbackCEndUserResult">
        select a.id, a.orderId, a.userPhone, a.content, a.feedbackTime, a.status, a.handleResult, a.finishTime, a.driverId, a.userId, a.riderId, a.handleStaff,
 b.id as sub_id, b.phone as sub_phone, b.password as sub_password, b.lastLoginTime as sub_lastLoginTime, b.passwordUpdateTime as sub_passwordUpdateTime, b.accountCreateTime as sub_accountCreateTime, b.type as sub_type, b.profileId as sub_profileId
        from feedback a
        left join user b on b.id = a.id
        where a.id = #{id}
    </select>
    <select id="getFeedbackNumber" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM feedback;
    </select>

    <insert id="insertFeedback" parameterType="Feedback" useGeneratedKeys="true" keyProperty="id">
        insert into feedback
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">orderId,</if>
            <if test="userPhone != null and userPhone != ''">userPhone,</if>
            <if test="content != null and content != ''">content,</if>
            <if test="feedbackTime != null and feedbackTime != ''">feedbackTime,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="handleResult != null">handleResult,</if>
            <if test="finishTime != null">finishTime,</if>
            <if test="driverId != null">driverId,</if>
            <if test="userId != null">userId,</if>
            <if test="riderId != null">riderId,</if>
            <if test="handleStaff != null">handleStaff,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">#{orderId},</if>
            <if test="userPhone != null and userPhone != ''">#{userPhone},</if>
            <if test="content != null and content != ''">#{content},</if>
            <if test="feedbackTime != null and feedbackTime != ''">#{feedbackTime},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="handleResult != null">#{handleResult},</if>
            <if test="finishTime != null">#{finishTime},</if>
            <if test="driverId != null">#{driverId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="riderId != null">#{riderId},</if>
            <if test="handleStaff != null">#{handleStaff},</if>
         </trim>
    </insert>

    <update id="updateFeedback" parameterType="Feedback">
        update feedback
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">orderId = #{orderId},</if>
            <if test="userPhone != null and userPhone != ''">userPhone = #{userPhone},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="feedbackTime != null and feedbackTime != ''">feedbackTime = #{feedbackTime},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="handleResult != null">handleResult = #{handleResult},</if>
            <if test="finishTime != null">finishTime = #{finishTime},</if>
            <if test="driverId != null">driverId = #{driverId},</if>
            <if test="userId != null">userId = #{userId},</if>
            <if test="riderId != null">riderId = #{riderId},</if>
            <if test="handleStaff != null">handleStaff = #{handleStaff},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteFeedbackById" parameterType="Long">
        delete from feedback where id = #{id}
    </delete>

    <delete id="deleteFeedbackByIds" parameterType="String">
        delete from feedback where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteCEndUserByIds" parameterType="String">
        delete from user where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteCEndUserById" parameterType="Long">
        delete from user where id = #{id}
    </delete>

    <insert id="batchCEndUser">
        insert into user( id, phone, password, lastLoginTime, passwordUpdateTime, accountCreateTime, type, profileId) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.phone}, #{item.password}, #{item.lastLoginTime}, #{item.passwordUpdateTime}, #{item.accountCreateTime}, #{item.type}, #{item.profileId})
        </foreach>
    </insert>
</mapper>
