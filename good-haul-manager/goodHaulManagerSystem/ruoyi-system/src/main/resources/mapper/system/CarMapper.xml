<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.CarMapper">
    
    <resultMap type="Car" id="CarResult">
        <result property="id"    column="id"    />
        <result property="code"    column="code"    />
        <result property="color"    column="color"    />
        <result property="carType"    column="carType"    />
        <result property="brand"    column="brand"    />
        <result property="enrollTime"    column="enrollTime"    />
        <result property="driverId"    column="driverId"    />
    </resultMap>

    <resultMap id="CarDriverResult" type="Car" extends="CarResult">
        <collection property="driverList" notNullColumn="sub_id" javaType="java.util.List" resultMap="DriverResult" />
    </resultMap>

    <resultMap type="Driver" id="DriverResult">
        <result property="id"    column="sub_id"    />
        <result property="account"    column="sub_account"    />
        <result property="password"    column="sub_password"    />
        <result property="name"    column="sub_name"    />
        <result property="phone"    column="sub_phone"    />
        <result property="finishOrderNumber"    column="sub_finishOrderNumber"    />
        <result property="lastLoginTime"    column="sub_lastLoginTime"    />
        <result property="lastFinishTime"    column="sub_lastFinishTime"    />
        <result property="accountCreateTime"    column="sub_accountCreateTime"    />
        <result property="driverType"    column="sub_driverType"    />
        <result property="type"    column="sub_type"    />
    </resultMap>

    <sql id="selectCarVo">
        select id, code, color, carType, brand, enrollTime, driverId from car
    </sql>

    <select id="selectCarList" parameterType="Car" resultMap="CarResult">
        <include refid="selectCarVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="code != null  and code != ''"> and code = #{code}</if>
            <if test="color != null  and color != ''"> and color = #{color}</if>
            <if test="carType != null  and carType != ''"> and carType = #{carType}</if>
            <if test="brand != null  and brand != ''"> and brand = #{brand}</if>
            <if test="params.beginEnrollTime != null and params.beginEnrollTime != '' and params.endEnrollTime != null and params.endEnrollTime != ''"> and enrollTime between #{params.beginEnrollTime} and #{params.endEnrollTime}</if>
            <if test="driverId != null  and driverId != ''"> and driverId = #{driverId}</if>
        </where>
    </select>
    
    <select id="selectCarById" parameterType="Long" resultMap="CarDriverResult">
        select a.id, a.code, a.color, a.carType, a.brand, a.enrollTime, a.driverId,
 b.id as sub_id, b.account as sub_account, b.password as sub_password, b.name as sub_name, b.phone as sub_phone, b.finishOrderNumber as sub_finishOrderNumber, b.lastLoginTime as sub_lastLoginTime, b.lastFinishTime as sub_lastFinishTime, b.accountCreateTime as sub_accountCreateTime, b.driverType as sub_driverType, b.type as sub_type
        from car a
        left join driver b on b.id = a.id
        where a.id = #{id}
    </select>
        
    <insert id="insertCar" parameterType="Car" useGeneratedKeys="true" keyProperty="id">
        insert into car
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null">code,</if>
            <if test="color != null">color,</if>
            <if test="carType != null">carType,</if>
            <if test="brand != null">brand,</if>
            <if test="enrollTime != null">enrollTime,</if>
            <if test="driverId != null">driverId,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null">#{code},</if>
            <if test="color != null">#{color},</if>
            <if test="carType != null">#{carType},</if>
            <if test="brand != null">#{brand},</if>
            <if test="enrollTime != null">#{enrollTime},</if>
            <if test="driverId != null">#{driverId},</if>
         </trim>
    </insert>

    <update id="updateCar" parameterType="Car">
        update car
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null">code = #{code},</if>
            <if test="color != null">color = #{color},</if>
            <if test="carType != null">carType = #{carType},</if>
            <if test="brand != null">brand = #{brand},</if>
            <if test="enrollTime != null">enrollTime = #{enrollTime},</if>
            <if test="driverId != null">driverId = #{driverId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCarById" parameterType="Long">
        delete from car where id = #{id}
    </delete>

    <delete id="deleteCarByIds" parameterType="String">
        delete from car where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteDriverByIds" parameterType="String">
        delete from driver where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteDriverById" parameterType="Long">
        delete from driver where id = #{id}
    </delete>

    <insert id="batchDriver">
        insert into driver( id, account, password, name, phone, finishOrderNumber, lastLoginTime, lastFinishTime, accountCreateTime, driverType, type) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.account}, #{item.password}, #{item.name}, #{item.phone}, #{item.finishOrderNumber}, #{item.lastLoginTime}, #{item.lastFinishTime}, #{item.accountCreateTime}, #{item.driverType}, #{item.type})
        </foreach>
    </insert>
</mapper>